geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
ylim(0, 0.5) +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 12))
ps1.lo
ps1.lo + ps1.hi
dfx2 <- df.foi.season %>% filter(season == "High")
View(dfx2)
mean(dfx2$p.inf)
dfx2b <- df.foi.season %>% filter(season == "Low")
mean(dfx2b$p.inf)
0.022/0.12
(0.022-0.127)/0.127
PR.case <- var.FOI * var.l * (1-var.a) * (1-var.E) * var.v + var.FOI * var.l * (1-var.a) * (1-var.v)
PR.case
df1 <- tibble(vac     = rep(seq(0.00, 1.00, by = 0.01), 3),
FOI_cat = c(rep("High", 101), rep("Medium", 101), rep("Low", 101)),
FOI     = c(rep(0.25, 101), rep(0.07, 101), rep(0.01, 101)))
df1 <- tibble(vac     = rep(seq(0.00, 1.00, by = 0.01), 3),
FOI_cat = c(rep("High", 101), rep("Medium", 101), rep("Low", 101)),
#using range from df.foi.season from low to mid to high
FOI     = c(rep(0.467035595, 101), rep(0.077228479, 101), rep(0.002808081, 101)))
df2 <- df1 %>% mutate(PR.case = FOI * 1 * (1-0.72) * (1-0.71) * vac + FOI * 1 * (1-0.72) * (1-vac)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count = baseline*235000,
cases_averted = FOI * 1 * (1-0.72) * 235000 - PR.case * 235000)
p1 <- df2 %>% ggplot(aes(x = vac, y = PR.case, color = FOI)) +
geom_point(alpha = 0.5) +
scale_color_gradient(low="darkgrey", high="red") +
xlab("Vaccination coverage") + ylab("Proportion of population\nwith symptomatic cases after 1 month") +
theme_bw() +
theme(axis.text = element_text(size = 14))
p1
df2 %>% ggplot(aes(x = vac, y = perc_decline, color = FOI)) +
geom_point(alpha = 0.5) +
scale_color_gradient(low="darkgrey", high="red") +
xlab("Vaccination coverage") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 14))
91/184
p3 <- df2 %>% ggplot(aes(x = vac, y = perc_decline)) +
geom_point(alpha = 0.5) +
geom_vline(xintercept = 0.7, color = "red") +
ylim(0, 100) +
xlab("Vaccination coverage") + ylab("Percent of cases averted") +
theme_bw() +
theme(axis.text = element_text(size = 14))
p3
df2 <- df1 %>% mutate(PR.case = FOI * 1 * (1-0.72) * (1-0.71) * vac + FOI * 1 * (1-0.72) * (1-vac)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count = baseline*235000,
cases_averted = FOI * 1 * (1-0.72) * 235000 - PR.case * 235000,
expected_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000)
View(df2)
#expected cases (no vaccination) vs expected cases (with vacc)
p4 <- df2 %>% ggplot(aes(x = expected_case_count_p1000, y = vaccinated_case_count_p1000, color = vac)) +
geom_point(alpha = 0.5) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
#expected cases (no vaccination) vs expected cases (with vacc)
p4 <- df2 %>% ggplot(aes(x = expected_case_count_p1000, y = vaccinated_case_count_p1000, color = vac)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(FOI_cat)) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
#expected cases (no vaccination) vs expected cases (with vacc)
p4 <- df2 %>% ggplot(aes(x = vac, y = vaccinated_case_count_p1000)) +
geom_point(alpha = 0.5) +
facet_wrap(vars(FOI_cat)) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
df3a <- tibble(vacc_cov = rep(seq(0.00, 1.00, by = 0.01), 4),
vacc_eff = c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)),
#using range from df.foi.season from low to mid to high
FOI     = rep(0.1, 101*4))
View(df3a)
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000)
View(df3b)
df3a <- tibble(vacc_cov = rep(seq(0.00, 1.00, by = 0.01), 4),
vacc_eff = c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)),
#using range from df.foi.season from low to mid to high
FOI     = rep(0.47, 101*4))
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000)
df3a <- tibble(vacc_cov = rep(seq(0.00, 1.00, by = 0.01), 4),
vacc_eff = c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)),
#using range from df.foi.season from low to mid to high
FOI     = rep(0.47, 101*4))
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000)
df3a <- tibble(vacc_cov = rep(rep(seq(0.00, 1.00, by = 0.01), 4), 3),
vacc_eff = rep(c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)), 3),
#using range from df.foi.season from low to mid to high
FOI     = c(rep(0.467035595, 101*4), rep(0.077228479, 101*4), rep(0.002808081, 101*4)))
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000)
df3a <- tibble(vacc_cov = rep(rep(seq(0.00, 1.00, by = 0.01), 4), 3),
vacc_eff = rep(c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)), 3),
#using range from df.foi.season from low to mid to high
FOI     = c(rep(0.467035595, 101*4), rep(0.077228479, 101*4), rep(0.002808081, 101*4)),
FOI     = c(rep("High", 101*4), rep("Moderate", 101*4), rep("Low", 101*4)))
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df2 %>% ggplot(aes(x = vacc_cov, y = cases_averted)) +
geom_point(alpha = 0.5) +
facet_grid(rows = vars(FOI_cat), cols = vars(vacc_eff)) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted)) +
geom_point(alpha = 0.5) +
facet_grid(rows = vars(FOI_cat), cols = vars(vacc_eff)) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
df3a <- tibble(vacc_cov = rep(rep(seq(0.00, 1.00, by = 0.01), 4), 3),
vacc_eff = rep(c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)), 3),
#using range from df.foi.season from low to mid to high
FOI = c(rep(0.467035595, 101*4), rep(0.077228479, 101*4), rep(0.002808081, 101*4)),
FOI_cat = c(rep("High", 101*4), rep("Moderate", 101*4), rep("Low", 101*4)))
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000)
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted)) +
geom_point(alpha = 0.5) +
facet_grid(rows = vars(FOI_cat), cols = vars(vacc_eff)) +
theme_bw() +
theme(axis.text = element_text(size = 14))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted)) +
geom_point(alpha = 0.5) +
facet_grid(rows = vars(FOI_cat), cols = vars(vacc_eff)) +
theme_bw() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
theme_bw() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p5
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p5
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_minimal() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_light() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_void() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_gray() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_minimal() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_dark() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_linedraw() +
theme(axis.text = element_text(size = 10))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 10))
p5
p4 + p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(axis.text = element_text(size = 10),
legend.position = "bottom")
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(axis.text = element_text(size = 10),
legend.position = "bottom")
p5
p4 + p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(legend.position = "bottom")
p5
p4 + p5
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>% mutate(vacc_eff = factor(vacc_eff)) %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases") +
theme_bw() +
theme(legend.position = "bottom")
p5
p4 + p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 0.5) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#F26553", "#AE123A", "red")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#F26553", "#AE123A", "red")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
df3a <- tibble(vacc_cov = rep(rep(seq(0.00, 1.00, by = 0.01), 4), 3),
vacc_eff = rep(c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)), 3),
#using range from df.foi.season from low to mid to high
FOI = c(rep(0.467035595, 101*4), rep(0.077228479, 101*4), rep(0.002808081, 101*4)),
FOI_cat = c(rep("High", 101*4), rep("Moderate", 101*4), rep("Low", 101*4))) %>%
mutate(FOI_cat = factor(FOI_cat, levels = c("High", "Moderate", "Low")))
df3a <- tibble(vacc_cov = rep(rep(seq(0.00, 1.00, by = 0.01), 4), 3),
vacc_eff = rep(c(rep(0.75, 101), rep(0.65, 101), rep(0.55, 101), rep(0.45, 101)), 3),
#using range from df.foi.season from low to mid to high
FOI = c(rep(0.467035595, 101*4), rep(0.077228479, 101*4), rep(0.002808081, 101*4)),
FOI_cat = c(rep("High", 101*4), rep("Moderate", 101*4), rep("Low", 101*4))) %>%
mutate(FOI_cat = factor(FOI_cat, levels = c("High", "Moderate", "Low")))
df3b <- df3a %>%
mutate(PR.case = FOI * 1 * (1-0.72) * (1-vacc_eff) * vacc_cov + FOI * 1 * (1-0.72) * (1-vacc_cov)) %>%
mutate(baseline = FOI * 1 * (1-0.72),
perc_decline = (baseline - PR.case)/baseline * 100,
baseline_case_count_p1000 = baseline*1000,
vaccinated_case_count_p1000 = PR.case*1000,
cases_averted = baseline*1000 - PR.case*1000) %>%
mutate(vacc_eff = factor(vacc_eff))
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#F26553", "#AE123A", "red")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
p4
demo("colors")
geom_point(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#AE123A", "firebrick1", "indianred1")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_point(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#AE123A", "firebrick1", "indianred1")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
demo("colors")
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
plotCol(nearRcolor("deepskyblue", "rgb", dist=50))
plotCol(nearRcolor("deepskyblue", "rgb", dist=12))
plotCol(nearRcolor("deepskyblue", "rgb", dist=25))
plotCol(nearRcolor("deepskyblue", "rgb", dist=50), row = 3)
plotCol(nearRcolor("deepskyblue", "rgb", dist=50), nrow = 3)
plotCol(nearRcolor("deepskyblue", "rgb", dist=100))
plotCol(nearRcolor("darkblue", "rgb", dist=100))
plotCol(nearRcolor("darkblue", "rgb", dist=70))
plotCol(nearRcolor("darkblue", "rgb", dist=100))
plotCol(nearRcolor("deepskyblue", "rgb", dist=100))
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
scale_color_manual(name = "Vaccine Efficacy",
values = c("navy", "blue3", "deepskyblue", "lightblue")) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_point(alpha = 0.5) +
scale_color_manual(name = "Vaccine Efficacy",
values = c("deepskyblue4", "deepskyblue3", "deepskyblue2", "deepskyblue1")) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_line(alpha = 0.5) +
scale_color_manual(name = "Vaccine Efficacy",
values = c("deepskyblue4", "deepskyblue3", "deepskyblue2", "deepskyblue1")) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_line(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#AE123A", "firebrick1", "indianred1")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom")
p4
#percent decline in sympt cases (y) vs vaccine coverage (x) for 4 levels of efficacy
p5 <- df3b %>%
ggplot(aes(x = vacc_cov, y = perc_decline, color = vacc_eff)) +
geom_line(alpha = 1) +
scale_color_manual(name = "Vaccine Efficacy",
values = c("deepskyblue4", "deepskyblue3", "deepskyblue2", "deepskyblue1")) +
xlab("Proportion fully vaccinated") + ylab("Percent decline in symptomatic cases (%)") +
theme_bw() +
theme(legend.position = "bottom")
p5
p4 + p5
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_line(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#AE123A", "firebrick1", "indianred1")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom", panel.background = element_rect(fill = "white"))
p4
#cases averted per month per 1000 eligible (y) vs vaccine coverage (x) for 4 levels of efficacy and 3 FOIs
p4 <- df3b %>% ggplot(aes(x = vacc_cov, y = cases_averted, color = FOI_cat)) +
geom_line(alpha = 1) +
facet_grid(cols = vars(vacc_eff)) +
scale_color_manual(name = "FOI Category",
values = c("#AE123A", "firebrick1", "indianred1")) +
xlab("Proportion fully vaccinated") + ylab("Number of cases averted per month\n(per 1000 eligible individuals)") +
theme_bw() +
theme(legend.position = "bottom", strip.background = element_rect(fill = "white"))
p4
p4 + p5 + plot_layout(widths = c(2, 1))
