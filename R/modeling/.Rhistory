library(ggrepel)
library(geosphere)
########################################################################################################
## Reading in data
##RDT (pre-processed RDT file in long format)
##20231007
df5 <- readr::read_csv("/Users/blrice/Documents/R GIT REPOS/2022_MNJ_TAZO/data_rdt/rdt_data_20231007.csv")
##FOI (pre-processed FOI file)
##20231023
df.foi.i <- readr::read_csv("/Users/blrice/Documents/R GIT REPOS/2022_MNJ_TAZO/data_foi/foi_bookends 20231023.csv")
#Writing a function to run binom.test() using number of positives and sample size
#Output of binom.test() is a htest object
#From which we extract the upper and lower confidence interval bounds
#For lower limit first
f.CI_calc_lower <- function(v.n_pos, v.n){
v.CI_lower <- rep(NA, length(v.n_pos))
for (i in 1:length(v.n_pos)) {
x.i <- v.n_pos[i]
n.i <- v.n[i]
htest.i <- binom.test(x.i, n.i)
v.CI_lower[i] <- htest.i$conf.int[1]
}
return(v.CI_lower)
}
#And now for upper limit
f.CI_calc_upper <- function(v.n_pos, v.n){
v.CI_upper <- rep(NA, length(v.n_pos))
for (i in 1:length(v.n_pos)) {
x.i <- v.n_pos[i]
n.i <- v.n[i]
htest.i <- binom.test(x.i, n.i)
v.CI_upper[i] <- htest.i$conf.int[2]
}
return(v.CI_upper)
}
#Dropping rows without RDT data
#baseline (T01)
df.b1 <- df5 %>% select(-enrollment_status) %>% drop_na() %>%
group_by(time_point, site_code) %>%
summarize(n = n(), n_pos = sum(rdt.result), prev = n_pos/n*100) %>% ungroup() %>%
filter(time_point == "T01")
#Adding confidence intervals
#Multiplying by 100 to make a percentage
df.b1 <- df.b1 %>% rowwise() %>%
mutate(Prev.CI.lower = f.CI_calc_lower(n_pos, n) * 100) %>%
mutate(Prev.CI.upper = f.CI_calc_upper(n_pos, n) * 100)
#Plotting
p.b1 <- df.b1 %>%
#Flipping N for S to align with scale axis
mutate(site_code = factor(site_code, levels = c("S6", "S5", "S3", "S2", "S1", "N1", "N2", "N3", "N4", "N5"))) %>%
ggplot(aes(x=time_point, y=prev, color=site_code)) +
geom_point(stat = "identity", size = 3) +
#Adding error bars
geom_errorbar(aes(ymin=Prev.CI.lower, ymax=Prev.CI.upper, color=site_code),
linewidth = 0.3,     # Thinner lines
width = 0.06,        # Thinner horizontals on the Ts
position="identity") +
scale_color_manual(values = rep("#C92C15", 10)) +
#xlab("Baseline") +
ylab("Baseline prevalence, all ages (%)") +
#labs(title    = "Malaria prevalence by site", subtitle = "(all ages)") +
xlab(NULL) +
ylim(0, 70) +
facet_wrap(vars(site_code), nrow = 1) +
theme_bw() +
theme(legend.position = "none",
strip.background = element_rect(fill = "white", colour = "white"),
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_text(family = "Times", size = 12),
axis.title.y = element_text(family = "Times", size = 14))
p.b1
View(df.b1)
########################################################################################################
#Grabbing FOI for age 14, January 1 for ease of comparison
df.foi <- df.foi.i %>% filter(date == ymd("2023-01-01")) %>%
pivot_longer(!date, names_to = "site.age", values_to = "foi") %>%
mutate(site_code = substr(site.age, 1, 2),
age = substr(site.age, 4, 6)) %>%
filter(age == "14")
df.p2 <- df.b1 %>% left_join(df.foi, by = join_by(site_code))
p2 <- df.p2 %>%
ggplot(aes(x = prev, y = foi)) +
geom_point()
p2
#Reading in gps data with midpoints for the 10 study sites
df.gps.i <- readxl::read_excel("/Users/blrice/Documents/R GIT REPOS/2022_MNJ_TAZO/data_gps/MIDPOINTS 20230316.xlsx")
#cleaning up the data frame
df.gps <- df.gps.i %>% rename(site_code = Code,
lat = `Latitude (S)`,
lon = `Longitude (E)`) %>%
#flipping lat to negative because south
mutate(lat = -1*lat) %>%
#calculating the distance from site midpoint to Mananjary
#Mananjary coordinates (District hospital): -21.2135, 48.3551
rowwise() %>% mutate(km_to_mnj = distVincentyEllipsoid(c(lon, lat), c(48.3551, -21.2135))/1000) %>%
#flipping south sites negative so MNJ is centered
mutate(km_to_mnj.n.s = case_when(
site_code %in% c("S1","S2","S3","S5","S6") ~ -1*km_to_mnj,
site_code %in% c("N1","N2","N3","N4","N5") ~ km_to_mnj
))
df.p3 <- df.p2 %>% left_join(df.gps, by = join_by(site_code))
#df.p3$foi
#range in foi: 0.02 to 0.16
# 60/0.16 = 375
coeff <- 410
p3 <- df.p3 %>%
ggplot(aes(x=km_to_mnj.n.s, color=site_code)) +
geom_point(aes(y=prev), stat = "identity", size = 3) +
#Adding error bars
geom_errorbar(aes(ymin=Prev.CI.lower, ymax=Prev.CI.upper, color=site_code),
linewidth = 0.3,     # Thinner lines
width = 0.06,        # Thinner horizontals on the Ts
position="identity") +
geom_point(aes(y=foi*coeff, color=site_code), size = 3, shape = 15) +
scale_y_continuous(sec.axis = sec_axis(~./coeff, name = "FOI")) +
scale_color_viridis_d(option = "cividis") +
xlab("Distance from Mananjary District Hospital (km)") +
ylab("Baseline prevalence, all ages (%)") +
#labs(title    = "Malaria prevalence by site", subtitle = "(all ages)") +
xlim(-60, 60) +
#coord_flip() +
theme_bw() +
theme(legend.position = "none",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Times", size = 12),
axis.title = element_text(family = "Times", size = 14))
p3
### To make an x axis, plotting distance from MNJ hospital
df.p3 %>% ggplot(aes(x = km_to_mnj.n.s, y = 1)) +
geom_point() +
scale_x_continuous(name = "Distance from Mananjary District Hospital (km)",
limits = c(-55, 55),
breaks = c(-50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50),
minor_breaks = seq(from=-56, to=56, by=2)) +
scale_y_continuous(limits = c(0.99, 1.01),
breaks = c(0.99, 1.00, 1.01),
minor_breaks = c(0.99, 1.00, 1.01)) +
theme_bw()
#Using combn to get a list of all pairwise comparisons
l.combn <- combn(df.p3$site_code, 2, simplify = FALSE)
length(l.combn)
#Creating a dataframe to hold pairwise comparisons
df.pw <- tibble(site.i = rep(NA, length(l.combn)),
site.j = rep(NA, length(l.combn)))
for(i in 1:length(l.combn)){
df.pw$site.i[i] <- l.combn[[i]][1]
df.pw$site.j[i] <- l.combn[[i]][2]
}
df.pw <- df.pw %>%
#Using left_join() to add prev for site.i
left_join(df.p3 %>% select(site_code, prev), by = join_by(site.i == site_code)) %>%
rename(prev.i = prev) %>%
#Using left_join() to add prev for site.j
left_join(df.p3 %>% select(site_code, prev), by = join_by(site.j == site_code)) %>%
rename(prev.j = prev) %>%
#Comparing difference in prev as a proportion
mutate(diff.in.prev.p = abs(prev.i-prev.j)/prev.i) %>%
#Using left_join() to add foi for site.i
left_join(df.p3 %>% select(site_code, foi), by = join_by(site.i == site_code)) %>%
rename(foi.i = foi) %>%
#Using left_join() to add foi for site.j
left_join(df.p3 %>% select(site_code, foi), by = join_by(site.j == site_code)) %>%
rename(foi.j = foi) %>%
#Comparing difference in foi as a proportion
mutate(diff.in.foi.p = abs(foi.i-foi.j)/foi.i)
df.pw %>% ggplot(aes(x = diff.in.prev.p, y = diff.in.foi.p)) +
geom_point(color = "#529985", size = 4, alpha = 0.5) +
geom_abline(intercept = 0, slope = 1, alpha = 0.5) +
scale_x_continuous(name = "Pairwise difference in baseline prevalence",
limits = c(0, 4),
breaks = 0:10,
#minor_breaks = seq(from=-56, to=56, by=2)
) +
scale_y_continuous(name = "Pairwise difference in force of infection (FOI)",
limits = c(0, 10),
breaks = 0:10,
#minor_breaks = c(0.99, 1.00, 1.01)
) +
theme_bw() +
theme(axis.title = element_text(family="Times", size = 14),
axis.text  = element_text(family="Times", size = 12))
df.foi2 <- df.foi.i %>%
pivot_longer(!date, names_to = "site.age", values_to = "foi") %>%
mutate(site_code = substr(site.age, 1, 2),
age = substr(site.age, 4, 6))
df.foi.season <- df.foi2 %>%
group_by(site_code, age) %>%
summarize(Low = min(foi),
High = max(foi)) %>%
pivot_longer(!c(site_code, age), names_to = "season", values_to = "p.inf") %>%
mutate(age.cat = case_when(
age == 5  ~ "Young children",
age == 14 ~ "School aged children",
age == 30 ~ "Adults"
)) %>%
mutate(age.cat = factor(age.cat, levels = c("Young children", "School aged children", "Adults"))) %>%
mutate(site_code = factor(site_code, levels = c("S6", "S5", "S3", "S2", "S1", "N1", "N2", "N3", "N4", "N5")))
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = season)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(age.cat), scales = "free_x") +
scale_color_manual(name = "Malaria transmission\nseason",
values = c("#AE123A", "#F26553")) +
scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Times", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Times", size = 14))
ps1
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = season)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(age.cat), scales = "free_x") +
scale_color_manual(name = "Malaria transmission\nseason",
values = c("#AE123A", "#F26553")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Times", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Times", size = 14))
ps1
View(df.foi.season)
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = season)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(season), scales = "free_x") +
scale_color_manual(name = "Malaria transmission\nseason",
values = c("#AE123A", "#F26553")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Times", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Times", size = 14))
ps1
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(season), scales = "free_x") +
scale_color_manual(name = "Malaria transmission\nseason",
values = c("#AE123A", "#F26553", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Times", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Times", size = 14))
ps1
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(season), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#AE123A", "#F26553", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1
ps1 <- df.foi.season %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), rows = vars(season), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1
ps1.hi <- df.foi.season %>% filter(season == "High") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1
ps1.hi <- df.foi.season %>% filter(season == "High") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1.hi
ps1.lo <- df.foi.season %>% filter(season == "Low") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "right",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1.lo
ps1.lo + ps1.hi
ps1.hi <- df.foi.season %>% filter(season == "High") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1.hi
ps1.lo <- df.foi.season %>% filter(season == "Low") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 12),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 14))
ps1.lo
ps1.lo + ps1.hi
ps1.hi <- df.foi.season %>% filter(season == "High") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 12))
ps1.hi
ps1.lo <- df.foi.season %>% filter(season == "Low") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 12))
ps1.lo
ps1.lo + ps1.hi
ps1.lo
ps1.hi
ps1.lo <- df.foi.season %>% filter(season == "Low") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
ylim(0, 0.5) +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 12))
ps1.lo
ps1.hi <- df.foi.season %>% filter(season == "High") %>%
ggplot(aes(x = site_code, y = p.inf, color = age.cat)) +
geom_point() +
facet_grid(cols = vars(site_code), scales = "free_x") +
scale_color_manual(name = "Age Category",
values = c("#F26553", "#AE123A", "red")) +
#scale_y_continuous(trans = 'log10') + annotation_logticks(sides = "l") +
ylab("Expected proportion of the population infected\n(per 31 days)") +
ylim(0, 0.5) +
xlab(NULL) +
theme_bw() +
theme(strip.background = element_rect(fill = "white", colour = "white"),
#legend.position = "bottom",
legend.position = "bottom",
panel.grid.major = element_blank(), #Dropping gridlines
panel.grid.minor = element_blank(), #Dropping gridlines
axis.text = element_text(family = "Arial", size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(family = "Arial", size = 12))
ps1.hi
ps1.lo
0.23*0.28
0.23/2
